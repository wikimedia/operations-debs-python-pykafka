From 8ff46d72e025494badba8cdd98e8a98918b48642 Mon Sep 17 00:00:00 2001
From: Andrew Otto <acotto@gmail.com>
Date: Thu, 3 Sep 2015 10:30:02 -0400
Subject: Backport fix for auto_offset_reset=-1 with new
 consumers from Issue #241

---
 pykafka/simpleconsumer.py | 28 ++++++++++++++++++++++++----
 1 file changed, 24 insertions(+), 4 deletions(-)

diff --git a/pykafka/simpleconsumer.py b/pykafka/simpleconsumer.py
index fd668ca..dd2f6ae 100644
--- a/pykafka/simpleconsumer.py
+++ b/pykafka/simpleconsumer.py
@@ -378,11 +378,31 @@ class SimpleConsumer():
             raise Exception("consumer group must be specified to fetch offsets")

         def _handle_success(parts):
+            partition_offsets_to_reset = []
             for owned_partition, pres in parts:
-                log.debug("Set offset for partition %s to %s",
-                          owned_partition.partition.id,
-                          pres.offset)
-                owned_partition.set_offset(pres.offset)
+                # If Kafka returned -1, that means that no
+                # offset was associated with this consumer group.
+                # This partition will have its offset reset.
+                if pres.offset == -1:
+                    log.debug("Partition %s has no committed offsets in "
+                              "consumer group %s.  Resetting to %s",
+                              owned_partition.partition.id,
+                              self._consumer_group,
+                              self._auto_offset_reset)
+                    partition_offsets_to_reset.append((
+                        owned_partition.partition,
+                        self._auto_offset_reset
+                    ))
+                else:
+                    log.debug("Set offset for partition %s to %s",
+                              owned_partition.partition.id,
+                              pres.offset)
+                    owned_partition.set_offset(pres.offset)
+
+            # If any partitions didn't have a committed offset,
+            # then reset those partition's offsets.
+            if partition_offsets_to_reset:
+                self.reset_offsets(partition_offsets_to_reset)

         reqs = [p.build_offset_fetch_request() for p in self._partitions.values()]
         success_responses = []
--
2.2.1

